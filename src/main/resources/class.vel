int y = 9;
class ValueStorage(int h, str b) {
    # constructor start
    int a = h + 1;
    func p() str {
        # method run
        (100+h).str.con(b);
    };
    func setA(str y) void {
        a = y.int;
    };
    # you can run methods, use fields above, for example
    # constructor end
};

# create class instance
any t = ValueStorage(42, "test");
# you can run class method t.p() and read-only access it fields t.a
t.setA("1000");
# t.a = 1000

# --- Random class sample

class Random(int seed) {
    int a = 252149039;    # These Values for a and c are the actual values found
    int c = 11;           # in the implementation of java.util.Random(), see link
    int previous = 0;

    func setSeed(int seed) void {
        previous = seed;
    };

    func next() int {
        int r = a * previous + c;
        # Note: typically, one chooses only a couple of bits of this value, see link
        previous = r;
        r;
    }
};

#--- Use randomizer class

class[Random] random = Random(12345);
int i = 5;
while (i > 0) {
    int r = random.next();
    i = i - 1;
};

#--- Simple pair class

class Pair(any key, any value) {};

class[Pair] p = Pair("key", 42);

func usePair(class[Pair] p) void {
    # p.key - "key"
    # p.value - 42
};

usePair(p);

#--- Class-in-class usage

class A(int z) {};

class[A] a = A(42);

class B(class[A] d) {
    int f = 9;
    func i(class[A] c) int {
        c.z + a.z;
    };
    func s(class[B] b) int {
        b.f - d.z;
    };
};

class[B] b = B(a);
b.i(a);
b.s(b);

#---

class LinkedList() {

    class Item(class[Item] prev, any value) {};

    class[Item] start;
    class[Item] end;
    int length = 0;

    func add(any value) void {
        end = Item(end, value);
        if (length == 0) {
            start = end;
        };
        length = length + 1;
    };

    func get(int index) any {
        int i = length - 1;
        any item = end;
        while (i > index) {
            item = item.prev;
            i = i - 1;
        };
        item.value;
    };

};

class[LinkedList] ll = LinkedList();
ll.add("10");
ll.add("20");
ll.add("30");

ll.get(3); # return 30
